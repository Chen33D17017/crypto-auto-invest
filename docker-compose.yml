version: "3.8"
services: 
  reverse-proxy:
    image: traefik:v2.2
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
  service-db:
    image: "mysql:8"
    container_name: service-db
    ports:
      - 3306:3306
    volumes:
    - ./initdb.d:/docker-entrypoint-initdb.d
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    environment:
      - MYSQL_DATABASE=crypto-db
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
  postgres-account:
    image: "postgres:alpine"
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    #   Set a volume for data and initial sql script
    #   May configure initial db for future demo
    volumes:
      - "pgdata_account:/var/lib/postgresql/data"
      # - ./init:/docker-entrypoint-initdb.d/
    command: ["postgres", "-c", "log_statement=all"]
  redis-account:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - "redisdata:/data"
  back-server:
    build:
      context: ./back-server
      target: builder
    image: back-server
    env_file: ./back-server/.env.dev
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.back-server.rule=Host(`malcorp.test`) && PathPrefix(`/api/account`)"
    environment: 
      - ENV=dev
    volumes: 
      - ./back-server:/go/src/app
    depends_on:
      - postgres-account
      - redis-account
      - service-db
    command: reflex -r "\.go$$" -s -- sh -c "go run ./"
volumes:
  pgdata_account:
  redisdata:
  